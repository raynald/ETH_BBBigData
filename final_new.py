#!/usr/bin/python
import sys
import numpy as np
import math
codeSet = {'PRCP':0, 'SNOW':1, 'SNWD':2, 'TMAX':3, 'TMIN':4}
feature = np.zeros((5,40))
count = np.zeros(5)
old_key = ""
old_year = ""
old_month = ""
outstring = ""
out = np.zeros((12,5))
count_station = 0
#mean_value = np.array([[22.546119, 24.752755, 23.515824, 20.913615, 21.878811, 25.865495, 27.689791, 24.170253, 23.002857, 21.566777, 21.896830, 22.389469],[5.898794, 5.152819, 3.848095, 1.462479, 0.256910, 0.029039, 0.011179, 0.016999, 0.079012, 0.556264, 2.266050, 5.096587],[94.365601, 102.652862, 82.601253, 35.016483, 7.676227, 1.893694, 0.664993, 0.302145, 0.353338, 2.708620, 16.088370, 54.362323],[42.197299, 60.876725, 103.354436, 160.340535, 210.599153, 250.157848, 274.306675, 266.503583, 228.605451, 172.004012, 104.936354, 54.686635],[-65.368707, -50.901215, -15.011085, 34.855410, 81.099478, 120.816951, 143.498466, 136.639838, 100.529208, 50.242055, -1.991399, -48.231973]])
#variance_value = np.array([[2914.953064, 3181.598705, 2990.566773, 3392.662114, 2881.431372, 3149.068500, 3705.087268, 2847.105231, 2562.565605, 2766.619507, 3409.843457, 3033.470488], [201.736997, 261.733019, 182.621273, 94.941438, 27.245422, 8.224320, 9.098376, 17.655892, 9.464897, 91.154170, 499.869232, 800.510377], [44869.738014, 57341.122644, 60538.840712, 36240.784566, 12762.449260, 4860.177106, 1708.272870, 589.553304, 406.301613, 1334.564453, 8187.858437, 18066.636550], [15233.486714, 15580.486291, 12093.005221, 7804.999164, 9591.696517, 4609.601960, 4321.588500, 4594.691732, 5320.134108, 7374.029830, 11138.212070, 14145.838966], [14327.960622, 14714.544753, 11087.321364, 6458.026888, 4420.723320, 3795.760272, 3458.412215, 3736.011041, 4338.664549, 5543.158536, 8958.372423, 12712.807763]])
mean_value = np.array([[22.546271, 24.752752, 23.515769, 20.913475, 21.878726, 25.865596, 27.689677, 24.170409, 23.002742, 21.566700, 21.896840, 22.389438],[5.898795, 5.152803, 3.848094, 1.462476, 0.256913, 0.029038, 0.011179, 0.016999, 0.079014, 0.556322, 2.266036, 5.096574],[94.365549, 102.652809, 82.601344, 35.016258, 7.676220, 1.893666, 0.664993, 0.302145, 0.353341, 2.708697, 16.088408, 54.362193],[42.197328, 60.876676, 103.354407, 160.340531, 210.599219, 250.157828, 274.306711, 266.503602, 228.605395, 172.004073, 104.936285, 54.686657],[-65.368662, -50.901222, -15.011080, 34.855497, 81.099519, 120.816924, 143.498441, 136.639797, 100.529210, 50.242072, -1.991459, -48.231930]])
variance_value = np.array([[361.109178, 429.673429, 393.936928, 420.046674, 362.485740, 393.634520, 440.439092, 363.417093, 323.585880, 343.361281, 442.626266, 632.720026],[6.333012, 9.827138, 6.224466, 2.971906, 0.927580, 0.284762, 0.285339, 0.602411, 0.311834, 3.516927, 18.090389, 47.052023],[1168.478559, 2021.745422, 1917.412598, 1056.091155, 401.236380, 151.343971, 49.394814, 18.940438, 12.335020, 40.173759, 268.160796, 922.046255],[574.064187, 749.630878, 526.057317, 302.239236, 410.331190, 196.894330, 166.435552, 197.297114, 218.853732, 297.916741, 492.288904, 1028.355906],[541.092268, 701.744506, 477.763910, 247.822811, 187.572989, 161.055451, 132.657198, 159.053478, 176.658162, 222.177660, 394.005703, 923.039081]])
def normalize(value,month,code):
    return (value - mean_value[code][month]) / math.sqrt(variance_value[code][month])


if __name__ == "__main__":
    t = 0
    for line in sys.stdin:
        t += 1
        if t % 100000 == 0:
            sys.stderr.write(str(t)+'\n')
        line = line.strip()
        key, year, month, code, num = line.split('\t')
        if code in codeSet:
            if old_key == "":
                old_key = key
                old_year = year
                old_month = month
            if key == old_key and year == old_year:
                if month != old_month:
                    for i in range(5):
                        if count[i] > 2 :
                            out[int(old_month)-1][i] =  normalize(feature[i][0:count[i]].mean(),int(old_month)-1,codeSet[code])
                            count_station += 1
                    old_month = month
                    count = np.zeros(5)
                    feature = np.zeros((5,40))
            else:
                for i in range(5):
                    if count[i] > 2 :
                        out[int(old_month)-1][i] =  normalize(feature[i][0:count[i]].mean(),int(old_month)-1,codeSet[code])
                        count_station += 1
                old_month = month
                count = np.zeros(5)
                feature = np.zeros((5,40))
                tmp = out.flatten()
                outstring = old_key+'\t'+ old_year+'\t'+ str(tmp[0])
                for i in range(1,60):
                    outstring += ','+str(tmp[i])
                if count_station > 10:
                    print outstring
                old_key = key
                old_year = year
                outstring = ""
                count_station = 0
            feature[codeSet[code]][count[codeSet[code]]] = int(num)
            count[codeSet[code]] += 1

    for i in range(5):
        if count[i] > 2 :
            out[int(old_month)-1][i] =  normalize(feature[i][0:count[i]].mean(),int(old_month)-1,codeSet[code])
    tmp = out.flatten()
    outstring = old_key+'\t'+ old_year+'\t'+ str(tmp[0])
    for i in range(1,60):
        outstring += ','+str(tmp[i])
    print outstring